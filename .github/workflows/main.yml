name: Generate manifest.json (PR)

on:
  push:
    branches: [ "master", "main" ]
    paths:
      - "**/*.md"
      - ".github/workflows/generate-manifest.yml"

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'auto: update manifest')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate manifest.json
        run: |
          node - <<'NODE'
          import fs from 'fs'; import path from 'path';
          const ROOT=process.cwd(), IGNORE=new Set(['.git','.github','node_modules','dist','build','.next','out']);
          function walk(d){return fs.readdirSync(d,{withFileTypes:true}).flatMap(e=>{
            if(e.name.startsWith('.DS_Store')) return [];
            const f=path.join(d,e.name), r=path.relative(ROOT,f).split(path.sep).join('/');
            if(e.isDirectory()){ if(IGNORE.has(e.name)) return []; return walk(f); }
            const ext=path.extname(e.name).toLowerCase(); return (ext==='.md'||ext==='.markdown')?[r]:[];
          });}
          const files=walk(ROOT).sort((a,b)=>a.localeCompare(b,'en',{numeric:true}));
          const manifest={generatedAt:new Date().toISOString(), defaultDoc: files.includes('README.md')?'README.md':(files[0]||null), files};
          fs.writeFileSync('manifest.json', JSON.stringify(manifest,null,2));
          console.log('Wrote manifest.json with', files.length, 'entries.');
          NODE

      - name: Create PR with updated manifest.json
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "auto: update manifest"
          branch: ci/update-manifest
          title: "auto: update manifest"
          body: "Generated by GitHub Actions"
          add-paths: |
            manifest.json
